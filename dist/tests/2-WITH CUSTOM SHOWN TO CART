import React, { createContext, useState, useContext, useEffect } from "react";

const CartContext = createContext();

export const useCart = () => useContext(CartContext);

export const CartProvider = ({ children }) => {
  const [cartItems, setCartItems] = useState([]);
  const [cartCount, setCartCount] = useState(0);
  const [isCounting, setIsCounting] = useState(false);

  const addToCart = (item) => {
    // Always treat each item as unique – no merging
    setCartItems((prev) => [...prev, item]);
    setCartCount((prev) => prev + item.quantity || 1);
    setIsCounting(true);
  };

  const updateQuantity = (index, newQty) => {
    const updated = [...cartItems];
    if (newQty <= 0) {
      updated.splice(index, 1);
    } else {
      updated[index].quantity = newQty;
    }
    setCartItems(updated);
    setCartCount(updated.reduce((sum, item) => sum + item.quantity, 0));
  };

  const removeFromCart = (index) => {
    const removedItem = cartItems[index];
    const updated = [...cartItems];
    updated.splice(index, 1);
    setCartItems(updated);
    setCartCount((prev) => prev - (removedItem?.quantity || 1));
  };

  useEffect(() => {
    if (isCounting) {
      const timer = setTimeout(() => setIsCounting(false), 500);
      return () => clearTimeout(timer);
    }
  }, [isCounting]);

  return (
    <CartContext.Provider
      value={{
        cartItems,
        cartCount,
        isCounting,
        addToCart,
        updateQuantity,
        removeFromCart,
      }}
    >
      {children}
    </CartContext.Provider>
  );
};

export { CartContext };














const panelData = [
  {
    type: "single",
    image: "/panels/single.png",
  },
  {
    type: "double",
    image: "/panels/double.png",
  },
  {
    type: "triple",
    image: "/panels/triple.png",
  },
  {
    type: "glass",
    image: "/panels/glass.png",
  },
  {
    type: "metal",
    image: "/panels/metal.png",
  },
  {
    type: "plastic",
    image: "/panels/plastic.png",
  },
];

export default panelData;


























import { useContext } from "react";
import { CartContext } from "../contexts/CartContext";
import { useNavigate } from "react-router-dom";
import CartButton from "../components/CartButton";

function Cart() {
  const { cartItems, updateQuantity, removeFromCart } = useContext(CartContext);
  const navigate = useNavigate();

  const renderPanelGrid = (item) => {
    return (
      <div
        style={{
          width: "350px",
          height: "350px",
          background: "#f0f0f0",
          position: "relative",
          margin: "20px auto",
          border: "2px solid #ccc",
          display: "flex",
          flexWrap: "wrap",
        }}
      >
        {Array.from({ length: 9 }).map((_, index) => {
          const icon = item.icons?.find((i) => i.position === index);
          return (
            <div
              key={index}
              style={{
                width: "30%",
                height: "100px",
                boxSizing: "border-box",
                position: "relative",
                textAlign: "center",
              }}
            >
              {icon && (
                <div
                  style={{
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                    justifyContent: "center",
                    height: "100%",
                  }}
                >
                  <div style={{ fontSize: "24px" }}>{icon.label}</div>
                  {icon.text && (
                    <div style={{ fontSize: "12px", marginTop: "5px" }}>
                      {icon.text}
                    </div>
                  )}
                </div>
              )}
            </div>
          );
        })}
      </div>
    );
  };

  return (
    <div style={{ padding: "40px", textAlign: "center", position: "relative" }}>
      <div style={{ position: "absolute", top: 20, right: 30 }}>
        <CartButton />
      </div>

      <h2>Your Cart</h2>

      {cartItems.length === 0 ? (
        <p>No items in cart.</p>
      ) : (
        cartItems.map((item, index) => (
          <div
            key={index}
            style={{
              borderBottom: "1px solid #ccc",
              margin: "20px auto",
              maxWidth: "500px",
              paddingBottom: "20px",
            }}
          >
            <p>
              <strong>{item.type}</strong>
              Quantity:
              <button
                onClick={() => updateQuantity(index, item.quantity - 1)}
                disabled={item.quantity <= 1}
              >
                {" "}
                -{" "}
              </button>
              {item.quantity}
              <button onClick={() => updateQuantity(index, item.quantity + 1)}>
                {" "}
                +{" "}
              </button>
            </p>
            {renderPanelGrid(item)}
            <button onClick={() => removeFromCart(index)}>Remove</button>
          </div>
        ))
      )}

      <button onClick={() => navigate("/")}>Back to Panel Selection</button>
    </div>
  );
}

export default Cart;























/* Customizer.css */

/* Panel container */
.customizer-container {
  text-align: center;
  padding: 30px;
  position: relative;
}

/* Grid for the panel template */
.panel-template {
  position: relative;
  display: inline-block;
  width: 300px; /* Set the panel width to control the size */
  height: 300px; /* Set the panel height */
  margin-bottom: 20px;
}

/* Image of the panel background */
.panel-background {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* Grid for icons */
.icon-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* 3 columns */
  grid-gap: 10px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* Prevent grid from interfering with dragging */
}

/* Icon cell style */
.grid-cell {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  height: 100%;
}

/* Wrapper for icon and label */
.icon-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  pointer-events: all;
  position: relative;
}

/* Icon image */
.icon-image {
  width: 50px;
  height: 50px;
  margin-bottom: 5px;
}

/* Label input */
.label-input {
  width: 60px;
  text-align: center;
  font-size: 12px;
  padding: 5px;
  margin-top: 5px;
  border: 1px solid #ccc;
  font-family: Arial, sans-serif;
}

/* Delete button on top of the icon */
.delete-icon {
  position: absolute;
  top: -5px;
  right: -5px;
  background-color: red;
  color: white;
  border: none;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  font-size: 14px;
  cursor: pointer;
  padding: 0;
}

.delete-icon:hover {
  background-color: darkred;
}

/* Icon selection options */
.icon-options {
  margin-top: 20px;
}

.icon-list {
  display: flex;
  justify-content: center;
  gap: 10px;
}

.icon-option {
  width: 40px;
  height: 40px;
  cursor: pointer;
}

button {
  padding: 10px 20px;
  background-color: #4caf50;
  color: white;
  border: none;
  cursor: pointer;
  margin-top: 20px;
}

button:hover {
  background-color: #45a049;
}

.icon-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 14px;
  position: relative;
  line-height: 1.2;
}

.icon-label {
  font-size: 24px;
}

.icon-text {
  font-size: 12px;
  margin-top: 4px;
  max-width: 80px;
  text-align: center;
  word-wrap: break-word;
}






























import React, { useContext, useState } from "react";
import { CartContext } from "../contexts/CartContext";
import "./Customizer.css";
import panelData from "../data/panelData";
import CartButton from "../components/CartButton";
import { useNavigate, useParams } from "react-router-dom";

const iconOptions = [
  { id: "ac", label: "❄️ AC" },
  { id: "fan", label: "🌀 Fan" },
  { id: "light", label: "💡 Light" },
  { id: "tv", label: "📺 TV" },
];

const GridCell = ({ index, onClick, children }) => (
  <div
    onClick={() => onClick(index)}
    style={{
      width: "30%",
      height: "100px",
      display: "inline-block",
      textAlign: "center",
      background: "transparent",
      margin: "5px",
      position: "relative",
      boxSizing: "border-box",
      verticalAlign: "top",
    }}
  >
    {children}
  </div>
);

function Customizer() {
  const { addToCart } = useContext(CartContext);
  const [selectedIcon, setSelectedIcon] = useState(null);
  const [placedIcons, setPlacedIcons] = useState([]);
  const [iconTexts, setIconTexts] = useState({});
  const navigate = useNavigate();
  const { panelType } = useParams();

  const panel = panelData.find((p) => p.type === panelType);

  const handlePlaceIcon = (cellIndex) => {
    const isOccupied = placedIcons.some((icon) => icon.position === cellIndex);
    if (isOccupied || selectedIcon === null) return;

    const iconPosition = {
      id: Date.now(),
      iconId: selectedIcon.id,
      label: selectedIcon.label,
      position: cellIndex,
    };

    setPlacedIcons((prev) => [...prev, iconPosition]);
    setSelectedIcon(null);
  };

  const handleIconClick = (icon) => {
    setSelectedIcon(icon);
  };

  const handleTextChange = (e, cellIndex) => {
    const newText = e.target.value;
    setIconTexts((prev) => ({
      ...prev,
      [cellIndex]: newText,
    }));
  };

  const handleDeleteIcon = (id) => {
    setPlacedIcons((prev) => prev.filter((icon) => icon.id !== id));
  };

  const handleAddToCart = () => {
    const design = {
      type: panelType,
      icons: placedIcons.map((icon) => ({
        iconId: icon.iconId,
        label: icon.label,
        position: icon.position,
        text: iconTexts[icon.position] || "",
      })),
      quantity: 1,
    };
    addToCart(design);
    // No redirect
  };

  return (
    <div className="customizer-container">
      <div style={{ position: "absolute", top: 20, right: 30 }}>
        <CartButton />
      </div>

      <h2>Customize your {panelType} panel</h2>

      <div style={{ display: "flex", gap: "10px", marginBottom: "20px" }}>
        {iconOptions.map((icon) => (
          <div
            key={icon.id}
            onClick={() => handleIconClick(icon)}
            style={{
              padding: "10px",
              background: "#e0e0e0",
              borderRadius: "8px",
              cursor: "pointer",
            }}
          >
            {icon.label}
          </div>
        ))}
      </div>

      <div
        style={{
          display: "flex",
          flexWrap: "wrap",
          width: "350px",
          height: "350px",
          background: "#f0f0f0",
          position: "relative",
          border: "2px solid #ccc",
        }}
      >
        {Array.from({ length: 9 }).map((_, index) => (
          <GridCell key={index} index={index} onClick={handlePlaceIcon}>
            {placedIcons
              .filter((icon) => icon.position === index)
              .map((icon) => (
                <div
                  key={icon.id}
                  style={{
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                    justifyContent: "center",
                    position: "relative",
                    height: "100%",
                  }}
                >
                  <div style={{ fontSize: "24px" }}>{icon.label}</div>
                  {iconTexts[icon.position] && (
                    <div style={{ fontSize: "12px", marginTop: "5px" }}>
                      {iconTexts[icon.position]}
                    </div>
                  )}
                  <button
                    onClick={() => handleDeleteIcon(icon.id)}
                    style={{
                      position: "absolute",
                      top: "-5px",
                      right: "-5px",
                      width: "20px",
                      height: "20px",
                      borderRadius: "50%",
                      backgroundColor: "red",
                      color: "white",
                      fontSize: "14px",
                      border: "none",
                      cursor: "pointer",
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                      padding: 0,
                    }}
                  >
                    −
                  </button>
                </div>
              ))}

            <input
              type="text"
              value={iconTexts[index] || ""}
              onChange={(e) => handleTextChange(e, index)}
              placeholder="Add text"
              style={{
                position: "absolute",
                bottom: "5px",
                left: "5px",
                width: "90%",
                fontSize: "12px",
                textAlign: "center",
              }}
            />
          </GridCell>
        ))}
      </div>

      <div style={{ marginTop: 20 }}>
        <button onClick={() => navigate("/")}>Back to Panel Selection</button>
        <button
          onClick={handleAddToCart}
          style={{ marginLeft: 10, cursor: "pointer" }}
        >
          Add to Cart
        </button>
      </div>
    </div>
  );
}

export default Customizer;























import { Link } from "react-router-dom";
import glassImage from "../assets/panels/glass.jpg";
import plasticImage from "../assets/panels/plastic.jpg";
import metalImage from "../assets/panels/metal.jpg"; // Make sure this image exists
import CartButton from "../components/CartButton";

function PanelTypeSelector() {
  return (
    <div style={{ textAlign: "center", padding: "40px", position: "relative" }}>
      <div style={{ position: "absolute", top: 20, right: 30 }}>
        <CartButton />
      </div>

      <h2>Select a Panel Type</h2>
      <div style={{ display: "flex", justifyContent: "center", gap: "40px" }}>
        <Link to="/customizer/glass">
          <img
            src={glassImage}
            alt="Glass Panel"
            style={{ width: "200px", cursor: "pointer" }}
          />
          <p>Glass Panel</p>
        </Link>
        <Link to="/customizer/plastic">
          <img
            src={plasticImage}
            alt="Plastic Panel"
            style={{ width: "200px", cursor: "pointer" }}
          />
          <p>Plastic Panel</p>
        </Link>
        <Link to="/customizer/metal">
          <img
            src={metalImage}
            alt="Metal Panel"
            style={{ width: "200px", cursor: "pointer" }}
          />
          <p>Metal Panel</p>
        </Link>
      </div>
    </div>
  );
}

export default PanelTypeSelector;





















import { BrowserRouter as Router, Routes, Route, Link } from "react-router-dom";
import PanelTypeSelector from "./pages/PanelTypeSelector";
import Customizer from "./pages/Customizer";
import Cart from "./pages/Cart";
import { CartProvider } from "./contexts/CartContext";

function App() {
  return (
    <CartProvider>
      <Router>
        <Routes>
          <Route path="/" element={<PanelTypeSelector />} />
          <Route path="/customizer/:type" element={<Customizer />} />
          <Route path="/cart" element={<Cart />} />
        </Routes>
      </Router>
    </CartProvider>
  );
}

export default App;
